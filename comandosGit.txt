git status   ************************************************* Muestra el estado de git
git --version ************************************************ Muestra la version de git y datos de nuestra PC
git --help *************************************************** Mestra comandos de git y ciertas ayudas


//clonar repo
git init         ********************************************* inicializa la carpeta con la que estamos trabajando
git clone https...    **************************************** clona repositorio indicado mediante url


//Subir repo

/*! Primero crear en la carpeta del proyecto un archivo "README.md" (este es un archivo de marcado de texto donde podremos escribir una descripcion del proyecto que se verá reflejada en nuestro repositorio)(adentro del readme podremos poner un titulo grande iniciado con un asterisco ejemplo: #estoEsUnTitulo. El resto de lineas pueden ir con texto sin etiquetas)*/

git init         ************
git add .        ********************************************* comando para añadir a nuestro git (el punto significa "todos los archivos") si queremos subir un solo archivo solo debemos reemplazarlo por el punto ejemplo: git add Readme.md
git commit -m "esto es un comentario"  *********************** Añade un comentario a nuestros cambios en el proyecto
git branch -M main     *************************************** Renombra la rama de nuestro proyecto por "main". Hacer esto solo en el caso de que la rama tenga un nombre antiguo como "master"           
git remote add nombreDelRepositorio https...  **************** Con esto indicamos a donde se van a subir nuestros archivos mediante el nombre del repositorio y su url
git push -u nombreDelRepositorio main    ********************* Envía al repositorio mencionado y su rama


//hacer un push (esto es para subir un cambio realizado a nuestro proyecto)
git add .
git commit -m "este es un mensaje"  
git push nombreDelRepositorio main  ************************** Envía nuestros cambios del proyecto al repositorio de GitHub a la rama que seleccionemos ejemplos: main,


//revierte a una version anterior eliminando todas las que están de por medio
git log           ******************************************** Muestra las versiones subidas al repositorio
git reset --hard codigoDeLaVersioinAReegresar **************** Regresa a la verson borrando todas las demas versiones de por medio

//revertir a una version sin eliminar las versiones de por medio
git log     **************************************************
git revert codigoDeLaVersioinAReegresar **********************
git add .      ***********************************************
git revert --continue **************************************** Toda esta serie de comandos desplegará un archivos con los cambios y tendremos que guardar los cambios


//Notas extras:

para evitar subir ciertos archivos al momento de hacer "git add ." debemos crear un archivo en nuestra carpeta de proyecto llamada ".gitignore"
adentro del archivo .gitignore agregaremos las direcciones de los archivos que no queremos subir ejempo: /assets/img
